#N canvas 330 180 484 328 10;
#X declare -lib iem_tab;
#X declare -lib iemmatrix;
#X obj 269 -80 loadbang;
#X obj 308 25 pack f f;
#X msg 308 49 set \$1 \$2;
#X msg 269 94 resize \$1;
#X obj 22 -9 *~;
#X obj 47 -12 *~;
#X obj 28 13 +~;
#X obj 29 37 sqrt~;
#X obj 22 -45 rfft~;
#X obj 23 -97 inlet~;
#X obj 331 -105 inlet;
#X obj 23 -72 *~;
#X obj 68 -96 tabreceive~ \$0-hann;
#X obj 268 21 / 2;
#X obj 30 61 tabsend~ one\$0;
#X obj 325 118 table one\$0;
#X obj 269 116 s one\$0;
#N canvas 231 171 489 184 Hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 1 float 0;
#X coords 0 1 1 0 200 120 1;
#X restore 262 37 graph;
#X msg 132 52 resize \$1;
#X obj 132 76 s \$0-hann;
#X obj 30 113 expr ((cos($f1*6.283185))* -0.5)+0.5;
#X obj 30 138 tabwrite \$0-hann;
#X obj 30 64 for++ 0 2048 1;
#X obj 30 91 / 2048;
#X obj 30 21 inlet;
#X obj 30 42 t b f;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 5 0 4 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 5 0;
#X connect 8 1 1 0;
#X connect 8 1 5 1;
#X connect 8 1 6 1;
#X restore 364 19 pd Hann-window;
#X obj 189 22 inlet;
#X obj 189 87 40;
#X obj 269 -57 t b b;
#N canvas 600 308 607 191 melscale 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0mel 40 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0;
#X coords 0 2048 40 -1 200 140 1;
#X restore 388 25 graph;
#X obj 350 84 inlet;
#X obj 22 6 inlet;
#X obj 107 78 s \$0mel;
#X msg 107 57 resize \$1;
#X obj 22 75 for++ 0 40;
#X obj 22 28 t b f f f;
#X obj 22 153 tabwrite \$0mel;
#X obj 22 108 expr (700*(exp((($f1*5015.0/$f2)/1127.01048)-1))*$f3)/22050
\;;
#X obj 177 86 - 1;
#X obj 42 55 - 1;
#X connect 1 0 8 2;
#X connect 2 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 7 1;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X connect 6 1 10 0;
#X connect 6 2 9 0;
#X connect 6 3 4 0;
#X connect 8 0 7 0;
#X connect 9 0 8 1;
#X connect 10 0 5 1;
#X restore 186 112 pd melscale;
#X obj 269 -13 \$1;
#X obj 296 -12 \$2;
#X obj 309 70 switch~;
#X obj 222 52 t b f;
#X obj 331 -83 route set;
#X obj 331 -61 unpack;
#X obj 373 43 import iem_tab;
#X obj 326 139 table wtri\$0;
#X obj 271 138 s wtri\$0;
#N canvas 677 0 451 704 mel 0;
#X obj 214 690 outlet;
#X obj 85 115 for++ 0 40 0.01;
#X obj 86 -13 bang~;
#X obj 85 139 t f f;
#X obj 85 164 tabread \$0mel;
#X obj 176 169 tabread \$0mel;
#X obj 176 146 + 1;
#X obj 214 667 t l b;
#X obj 214 643 list split 24;
#X obj 128 91 - 1;
#X obj 84 311 /;
#X obj 134 402 pack;
#X msg 134 425 0 \$1 0 \$2;
#X obj 132 548 tab_sum wtri\$0;
#X obj 124 377 int;
#X obj 84 356 tabwrite wtri\$0;
#X obj 84 292 t f f;
#X obj 85 216 t b f f f;
#X obj 134 447 tab_mul wtri\$0 one\$0 wtri\$0;
#X msg 132 526 0 \$1;
#X obj 133 505 f;
#X obj 183 46 inlet;
#X obj 134 472 tab_mul wtri\$0 wtri\$0 wtri\$0;
#X obj 113 60 s one\$0;
#X obj 86 13 t b b;
#X msg 113 37 0 0;
#X obj 213 623 list prepend;
#X obj 213 586 expr log(if($f1==0 \, 1 \, max($f1 \, 0.01)));
#X obj 84 270 for++ 1 4;
#X obj 84 335 expr min($f1 \, (1-$f1))*2;
#X obj 85 197 expr (int($f2)-int($f1))+1 \;;
#X obj 96 244 + 1;
#X connect 1 0 3 0;
#X connect 2 0 24 0;
#X connect 3 0 4 0;
#X connect 3 1 6 0;
#X connect 4 0 14 1;
#X connect 4 0 30 0;
#X connect 5 0 30 1;
#X connect 6 0 5 0;
#X connect 7 0 0 0;
#X connect 7 1 26 1;
#X connect 8 0 7 0;
#X connect 8 2 26 1;
#X connect 9 0 1 1;
#X connect 10 0 29 0;
#X connect 11 0 12 0;
#X connect 12 0 18 0;
#X connect 13 1 27 0;
#X connect 14 0 11 0;
#X connect 16 0 10 0;
#X connect 16 1 15 1;
#X connect 17 0 28 0;
#X connect 17 1 31 0;
#X connect 17 2 28 1;
#X connect 17 3 11 1;
#X connect 17 3 20 1;
#X connect 18 0 22 0;
#X connect 19 0 13 0;
#X connect 20 0 19 0;
#X connect 21 0 9 0;
#X connect 21 0 8 1;
#X connect 22 0 20 0;
#X connect 24 0 1 0;
#X connect 24 1 25 0;
#X connect 25 0 23 0;
#X connect 26 0 8 0;
#X connect 27 0 26 0;
#X connect 28 0 16 0;
#X connect 28 1 14 0;
#X connect 29 0 15 0;
#X connect 30 0 17 0;
#X connect 31 0 10 1;
#X restore 139 112 pd mel;
#N canvas 696 31 488 576 dct 0;
#X obj 76 11 mtx;
#X obj 76 -84 t b f f;
#X obj 77 34 mtx_mul 0;
#X obj 77 56 mtx_cos;
#X obj 38 187 mtx_mul;
#X obj 89 234 outlet;
#X obj 77 103 prepend;
#X obj 77 129 prepend col;
#X obj 38 211 niagara 3;
#N canvas 617 106 467 415 outras 0;
#X obj -124 -254 s \$0um;
#X obj -123 -272 prepend 0;
#X obj -127 -236 for++ 0 1023;
#X obj -132 -136 list-map;
#X obj -132 -115 sum;
#X obj -132 -93 tabwrite \$0dois;
#X obj -133 -185 tab_mul_scalar \$0um \$0tres;
#X obj -127 -214 t f f f;
#X obj -131 -156 tabdump \$0tres;
#X obj -79 -131 cos;
#X text -122 -315 possibilidade de fazer com tables apenas muito mais
pesado mas permite que se opere com vetores maiores que 1024 (matrizes
operam ate isse tamanho);
#X obj -167 41 mtx_mul;
#X obj -167 64 mtx_print;
#X obj -149 13 mtx 10 2;
#X obj -155 -10 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text -164 -65 como funciona a multiplicacao de matrizes;
#X msg 103 -73 1 2 3 4 5 6 7 8 9 10;
#X obj 103 -50 sum;
#X floatatom 117 -20 5 0 0 0 - - -;
#X obj -48 47 mtx_print;
#X msg -89 7 col 2 2 2 2 2 2 2 2 2 2 2;
#X msg -123 -17 col 1 10 0 0 0 0 0 0 0 0 0;
#X msg -168 -46 matrix 1 10 1 2 3 4 5 6 7 8 9 10;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 3 1 9 0;
#X connect 4 0 5 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 1 5 1;
#X connect 8 0 3 0;
#X connect 9 0 3 1;
#X connect 11 0 12 0;
#X connect 13 0 11 1;
#X connect 13 0 19 0;
#X connect 14 0 13 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 20 0 13 0;
#X connect 21 0 13 0;
#X connect 22 0 11 0;
#X restore 262 -279 pd outras possibilidades;
#X obj -65 75 inlet;
#X obj 88 -285 inlet;
#X obj -65 124 list prepend matrix 1;
#X obj -65 98 list prepend 40;
#X obj -65 147 list trim;
#X msg 154 -50 matrix \$1 1;
#X obj 91 -16 prepend;
#X obj 77 153 mtx 40 40;
#X msg 154 100 zeros \$1;
#X obj 88 -262 t b f f f f f f;
#X obj 154 128 mtx;
#X obj 89 -234 for++ 1 40;
#X obj 78 -106 for++ 1 40;
#X obj 90 -137 t l b;
#X obj 90 -161 list split 24;
#X obj 89 -181 list prepend;
#X obj 88 -209 expr ($f1-0.5)*(3.1415/$f2);
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 1 1 6 1;
#X connect 1 2 2 1;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 8 0;
#X connect 6 0 7 0;
#X connect 7 0 17 0;
#X connect 8 1 5 0;
#X connect 10 0 13 0;
#X connect 11 0 13 1;
#X connect 11 0 19 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 14 0 4 0;
#X connect 15 0 16 1;
#X connect 16 0 0 1;
#X connect 17 0 4 1;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 19 1 22 1;
#X connect 19 2 26 1;
#X connect 19 3 24 1;
#X connect 19 4 21 1;
#X connect 19 5 15 0;
#X connect 19 6 18 0;
#X connect 20 0 17 1;
#X connect 21 0 26 0;
#X connect 21 1 22 0;
#X connect 22 0 1 0;
#X connect 22 1 17 0;
#X connect 23 0 16 0;
#X connect 23 1 25 1;
#X connect 24 0 23 0;
#X connect 24 2 25 1;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X restore 139 141 pd dct;
#X obj 374 66 import iemmatrix;
#X obj 139 171 outlet;
#X connect 0 0 20 0;
#X connect 0 0 19 0;
#X connect 1 0 2 0;
#X connect 2 0 24 0;
#X connect 3 0 16 0;
#X connect 3 0 30 0;
#X connect 4 0 6 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 14 0;
#X connect 8 0 4 0;
#X connect 8 0 4 1;
#X connect 8 1 5 0;
#X connect 8 1 5 1;
#X connect 9 0 11 0;
#X connect 10 0 26 0;
#X connect 11 0 8 0;
#X connect 12 0 11 1;
#X connect 13 0 3 0;
#X connect 13 0 25 0;
#X connect 18 0 19 0;
#X connect 19 0 21 0;
#X connect 19 0 31 0;
#X connect 19 0 32 1;
#X connect 20 0 22 0;
#X connect 20 1 23 0;
#X connect 22 0 1 0;
#X connect 22 0 13 0;
#X connect 22 0 17 0;
#X connect 23 0 1 1;
#X connect 25 0 19 0;
#X connect 25 1 21 1;
#X connect 26 0 27 0;
#X connect 26 1 24 0;
#X connect 27 0 22 0;
#X connect 27 1 23 0;
#X connect 31 0 32 0;
#X connect 32 0 34 0;
